{"stats":{"totalMutantsCount":53,"killedCount":0,"notCoveredCount":0,"escapedCount":53,"errorCount":0,"skippedCount":0,"timeOutCount":0,"msi":0,"mutationCodeCoverage":0,"coveredCodeMsi":0},"escaped":[{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a - b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":8},"diff":"--- Original\n+++ New\n@@ -5,7 +5,7 @@\n // AddExample - Basic addition function\n // Mutation: + → -\n func AddExample(a, b int) int {\n-\treturn a + b\n+\treturn a - b\n }\n \n // SubtractExample - Basic subtraction function\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.0\" with checksum 4dfd1d0d318ff1a35973f19901fe6609\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a + b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":14},"diff":"--- Original\n+++ New\n@@ -11,7 +11,7 @@\n // SubtractExample - Basic subtraction function\n // Mutation: - → +\n func SubtractExample(a, b int) int {\n-\treturn a - b\n+\treturn a + b\n }\n \n // MultiplyExample - Basic multiplication function\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.1\" with checksum bfe176cc5598fab9ef7d2f4a1868ce87\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a / b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":20},"diff":"--- Original\n+++ New\n@@ -17,7 +17,7 @@\n // MultiplyExample - Basic multiplication function\n // Mutation: * → /\n func MultiplyExample(a, b int) int {\n-\treturn a * b\n+\treturn a / b\n }\n \n // DivideExample - Basic division function\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.2\" with checksum 4350c2797a9280e4bfff21408c80cef9\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a * b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":30},"diff":"--- Original\n+++ New\n@@ -27,7 +27,7 @@\n \tif b == 0 {\n \t\treturn 0\n \t}\n-\treturn a / b\n+\treturn a * b\n }\n \n // ModulusExample - Modulus operation\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.3\" with checksum 4c095f1fb482882ed44e262df2cf6693\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a * b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":39},"diff":"--- Original\n+++ New\n@@ -36,7 +36,7 @@\n \tif b == 0 {\n \t\treturn 0\n \t}\n-\treturn a % b\n+\treturn a * b\n }\n \n // ComplexArithmeticExample - Multiple mutation points\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.4\" with checksum fb92e4922f2d7b670e7e252c76308b90\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c + (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":46},"diff":"--- Original\n+++ New\n@@ -43,7 +43,7 @@\n func ComplexArithmeticExample(a, b, c int) int {\n \t// Mutation points:\n \t// + → -, - → +, * → /, / → *\n-\treturn (a-b)*c - (a / b)\n+\treturn (a-b)*c + (a / b)\n }\n \n func RunArithmeticExample() {\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.5\" with checksum eca55d54a347f8b462f32cf925aed9dd\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)/c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":46},"diff":"--- Original\n+++ New\n@@ -43,7 +43,7 @@\n func ComplexArithmeticExample(a, b, c int) int {\n \t// Mutation points:\n \t// + → -, - → +, * → /, / → *\n-\treturn (a-b)*c - (a / b)\n+\treturn (a-b)/c - (a / b)\n }\n \n func RunArithmeticExample() {\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.6\" with checksum 1fddb346b2143767855ec6a77020020c\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a+b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":46},"diff":"--- Original\n+++ New\n@@ -43,7 +43,7 @@\n func ComplexArithmeticExample(a, b, c int) int {\n \t// Mutation points:\n \t// + → -, - → +, * → /, / → *\n-\treturn (a-b)*c - (a / b)\n+\treturn (a+b)*c - (a / b)\n }\n \n func RunArithmeticExample() {\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.7\" with checksum 0f99f35ade93a256372d05ac0693aa01\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a * b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":46},"diff":"--- Original\n+++ New\n@@ -43,7 +43,7 @@\n func ComplexArithmeticExample(a, b, c int) int {\n \t// Mutation points:\n \t// + → -, - → +, * → /, / → *\n-\treturn (a-b)*c - (a / b)\n+\treturn (a-b)*c - (a * b)\n }\n \n func RunArithmeticExample() {\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.8\" with checksum 21e0afbe2cdfb898562848f20cc51dc5\n"},{"mutator":{"mutatorName":"branch/if","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":28},"diff":"--- Original\n+++ New\n@@ -25,7 +25,7 @@\n // Division by zero check also creates mutation opportunities\n func DivideExample(a, b int) int {\n \tif b == 0 {\n-\t\treturn 0\n+\n \t}\n \treturn a / b\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.9\" with checksum 76b4d4aaa88944c20b10a3e64f9971a8\n"},{"mutator":{"mutatorName":"branch/if","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":37},"diff":"--- Original\n+++ New\n@@ -34,7 +34,7 @@\n // Mutation: % → *\n func ModulusExample(a, b int) int {\n \tif b == 0 {\n-\t\treturn 0\n+\n \t}\n \treturn a % b\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.10\" with checksum b2a71d509727ab6efe8694154012b07d\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == -1 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":27},"diff":"--- Original\n+++ New\n@@ -24,7 +24,7 @@\n // Mutation: / → *\n // Division by zero check also creates mutation opportunities\n func DivideExample(a, b int) int {\n-\tif b == 0 {\n+\tif b == -1 {\n \t\treturn 0\n \t}\n \treturn a / b\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.11\" with checksum e7ef6bc093a96cd906aa6f3d4ae7f972\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn -1\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":28},"diff":"--- Original\n+++ New\n@@ -25,7 +25,7 @@\n // Division by zero check also creates mutation opportunities\n func DivideExample(a, b int) int {\n \tif b == 0 {\n-\t\treturn 0\n+\t\treturn -1\n \t}\n \treturn a / b\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.12\" with checksum 06848b1c87d5c9d01b91ee256827168b\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == -1 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":36},"diff":"--- Original\n+++ New\n@@ -33,7 +33,7 @@\n // ModulusExample - Modulus operation\n // Mutation: % → *\n func ModulusExample(a, b int) int {\n-\tif b == 0 {\n+\tif b == -1 {\n \t\treturn 0\n \t}\n \treturn a % b\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.13\" with checksum c9328ed30871c0c257b402145f073d46\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn -1\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":37},"diff":"--- Original\n+++ New\n@@ -34,7 +34,7 @@\n // Mutation: % → *\n func ModulusExample(a, b int) int {\n \tif b == 0 {\n-\t\treturn 0\n+\t\treturn -1\n \t}\n \treturn a % b\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.14\" with checksum 8e8d81e724009d7dd6dc1f5563287c27\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(4, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ -50,7 +50,7 @@\n \tfmt.Println(\"Arithmetic Mutation Examples\")\n \tfmt.Println(\"============================\")\n \n-\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n+\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(4, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.15\" with checksum 799a1505635b691ba62e646ca0dc5f59\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 2))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ -50,7 +50,7 @@\n \tfmt.Println(\"Arithmetic Mutation Examples\")\n \tfmt.Println(\"============================\")\n \n-\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n+\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 2))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.16\" with checksum 43fddd9337c8db6def2a1f906a0daf21\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(9, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":54},"diff":"--- Original\n+++ New\n@@ -51,7 +51,7 @@\n \tfmt.Println(\"============================\")\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n-\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n+\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(9, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.17\" with checksum 9bbb8a09f39d857850a21ac1b65c8f49\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 3))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":54},"diff":"--- Original\n+++ New\n@@ -51,7 +51,7 @@\n \tfmt.Println(\"============================\")\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n-\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n+\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 3))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.18\" with checksum b2ddf023dde35c30a0a19b267cc25d72\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(5, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":55},"diff":"--- Original\n+++ New\n@@ -52,7 +52,7 @@\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n-\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n+\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(5, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.19\" with checksum 53ddf9fdbe9c5d65694655bfe5e69d8d\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 6))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":55},"diff":"--- Original\n+++ New\n@@ -52,7 +52,7 @@\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n-\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n+\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 6))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.20\" with checksum a8d7172d4b67912e66e391ef60e08c59\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(14, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":56},"diff":"--- Original\n+++ New\n@@ -53,7 +53,7 @@\n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n-\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n+\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(14, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.21\" with checksum ea6638250513438dd07aa03e8bf6f8e9\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 2))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":56},"diff":"--- Original\n+++ New\n@@ -53,7 +53,7 @@\n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n-\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n+\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 2))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.22\" with checksum b6bb93440c2bfdf8286738f658576c74\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(16, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":57},"diff":"--- Original\n+++ New\n@@ -54,6 +54,6 @@\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n-\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n+\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(16, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.23\" with checksum 5d6119ce1b1d61bd0b1677831a93a7b6\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 4))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":57},"diff":"--- Original\n+++ New\n@@ -54,6 +54,6 @@\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n-\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n+\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 4))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.24\" with checksum 9a9bcc8cdb8a81a266f7f804d650a5d2\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(9, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(9, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.25\" with checksum 107be7d5014ad1f8062a43ebd3cc7ddc\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 1, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 1, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.26\" with checksum 686ae9a6318faab38362cba2fd878f67\n"},{"mutator":{"mutatorName":"numbers/decrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 2))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 2))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.27\" with checksum 430d6e412afcee24b565e8487b9ef5be\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 1 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":27},"diff":"--- Original\n+++ New\n@@ -24,7 +24,7 @@\n // Mutation: / → *\n // Division by zero check also creates mutation opportunities\n func DivideExample(a, b int) int {\n-\tif b == 0 {\n+\tif b == 1 {\n \t\treturn 0\n \t}\n \treturn a / b\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.28\" with checksum 27348c1760cdb3a0161cba763ae1e6e8\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 1\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":28},"diff":"--- Original\n+++ New\n@@ -25,7 +25,7 @@\n // Division by zero check also creates mutation opportunities\n func DivideExample(a, b int) int {\n \tif b == 0 {\n-\t\treturn 0\n+\t\treturn 1\n \t}\n \treturn a / b\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.29\" with checksum b916a4e86f8ee6ae87ccfe758676c86b\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 1 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":36},"diff":"--- Original\n+++ New\n@@ -33,7 +33,7 @@\n // ModulusExample - Modulus operation\n // Mutation: % → *\n func ModulusExample(a, b int) int {\n-\tif b == 0 {\n+\tif b == 1 {\n \t\treturn 0\n \t}\n \treturn a % b\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.30\" with checksum d7f21a9235bf640cb2260263c1779daa\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 1\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":37},"diff":"--- Original\n+++ New\n@@ -34,7 +34,7 @@\n // Mutation: % → *\n func ModulusExample(a, b int) int {\n \tif b == 0 {\n-\t\treturn 0\n+\t\treturn 1\n \t}\n \treturn a % b\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.31\" with checksum 21e9f26941f18c13080d9da2f36b1927\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(6, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ -50,7 +50,7 @@\n \tfmt.Println(\"Arithmetic Mutation Examples\")\n \tfmt.Println(\"============================\")\n \n-\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n+\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(6, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.32\" with checksum 04aa69e91ccc3061cac3961aea9b23ce\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 4))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":53},"diff":"--- Original\n+++ New\n@@ -50,7 +50,7 @@\n \tfmt.Println(\"Arithmetic Mutation Examples\")\n \tfmt.Println(\"============================\")\n \n-\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n+\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 4))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.33\" with checksum e53bad4165f635ef81827659d74548a8\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(11, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":54},"diff":"--- Original\n+++ New\n@@ -51,7 +51,7 @@\n \tfmt.Println(\"============================\")\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n-\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n+\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(11, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.34\" with checksum 048612cd7e64fd837f3c073f7d46f0af\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 5))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":54},"diff":"--- Original\n+++ New\n@@ -51,7 +51,7 @@\n \tfmt.Println(\"============================\")\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n-\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n+\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 5))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.35\" with checksum af00e54b19620538c0e4d28e65d41475\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(7, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":55},"diff":"--- Original\n+++ New\n@@ -52,7 +52,7 @@\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n-\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n+\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(7, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.36\" with checksum ca55e00b497162143e67f76a6a1ed941\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 8))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":55},"diff":"--- Original\n+++ New\n@@ -52,7 +52,7 @@\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n-\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n+\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 8))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.37\" with checksum 35da8e2cdbe32dffcd8e4ddd26b87903\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(16, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":56},"diff":"--- Original\n+++ New\n@@ -53,7 +53,7 @@\n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n-\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n+\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(16, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.38\" with checksum c46f4e3b7145c66625498673c24d573f\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 4))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":56},"diff":"--- Original\n+++ New\n@@ -53,7 +53,7 @@\n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n-\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n+\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 4))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.39\" with checksum 2c514413b479667e879ecbe13d5f0db6\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(18, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":57},"diff":"--- Original\n+++ New\n@@ -54,6 +54,6 @@\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n-\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n+\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(18, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.40\" with checksum 28ac58889cd74cb1fedc2693ac7a0bdc\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 6))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":57},"diff":"--- Original\n+++ New\n@@ -54,6 +54,6 @@\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n-\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n+\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 6))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.41\" with checksum ee6d0daca5125d85f999106509350eaf\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(11, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(11, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.42\" with checksum d39c9e8f09b837ea1262dd4450bde6cb\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 3, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 3, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.43\" with checksum e02481e8a52f4a6064a51189b5e3cea6\n"},{"mutator":{"mutatorName":"numbers/incrementer","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 4))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 4))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.44\" with checksum 681221802f494a806a342f375e851b88\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\t_ = fmt.Println\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":50},"diff":"--- Original\n+++ New\n@@ -47,7 +47,7 @@\n }\n \n func RunArithmeticExample() {\n-\tfmt.Println(\"Arithmetic Mutation Examples\")\n+\t_ = fmt.Println\n \tfmt.Println(\"============================\")\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.45\" with checksum 3bc8095dc457826deb74cfaf6c414652\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\t_ = fmt.Println\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":51},"diff":"--- Original\n+++ New\n@@ -48,7 +48,7 @@\n \n func RunArithmeticExample() {\n \tfmt.Println(\"Arithmetic Mutation Examples\")\n-\tfmt.Println(\"============================\")\n+\t_ = fmt.Println\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.46\" with checksum e99d447a8d169fbbcae80a0bc3cf4f05\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\t_ = fmt.Printf\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":52},"diff":"--- Original\n+++ New\n@@ -49,8 +49,7 @@\n func RunArithmeticExample() {\n \tfmt.Println(\"Arithmetic Mutation Examples\")\n \tfmt.Println(\"============================\")\n-\n-\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n+\t_ = fmt.Printf\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.47\" with checksum 6b826146a3b0d1011dd1b52ec7aec65e\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\t_ = fmt.Printf\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":54},"diff":"--- Original\n+++ New\n@@ -51,7 +51,7 @@\n \tfmt.Println(\"============================\")\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n-\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n+\t_ = fmt.Printf\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.48\" with checksum 2bf8c8f36f5a5cd62c407292c70520f7\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\t_ = fmt.Printf\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":55},"diff":"--- Original\n+++ New\n@@ -52,7 +52,7 @@\n \n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n-\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n+\t_ = fmt.Printf\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.49\" with checksum 6b2cc284f5830705598e25cdb24c7cc7\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\t_ = fmt.Printf\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":56},"diff":"--- Original\n+++ New\n@@ -53,7 +53,7 @@\n \tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n-\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n+\t_ = fmt.Printf\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.50\" with checksum 9720e0718fb61523a2d0a8fd1172a028\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\t_ = fmt.Printf\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":57},"diff":"--- Original\n+++ New\n@@ -54,6 +54,6 @@\n \tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n-\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n+\t_ = fmt.Printf\n \tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.51\" with checksum 8fc8aa74d043272858c28cfd51fb044c\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n}\n","mutatedSourceCode":"package examples\n\nimport \"fmt\"\n\n// AddExample - Basic addition function\n// Mutation: + → -\nfunc AddExample(a, b int) int {\n\treturn a + b\n}\n\n// SubtractExample - Basic subtraction function\n// Mutation: - → +\nfunc SubtractExample(a, b int) int {\n\treturn a - b\n}\n\n// MultiplyExample - Basic multiplication function\n// Mutation: * → /\nfunc MultiplyExample(a, b int) int {\n\treturn a * b\n}\n\n// DivideExample - Basic division function\n// Mutation: / → *\n// Division by zero check also creates mutation opportunities\nfunc DivideExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a / b\n}\n\n// ModulusExample - Modulus operation\n// Mutation: % → *\nfunc ModulusExample(a, b int) int {\n\tif b == 0 {\n\t\treturn 0\n\t}\n\treturn a % b\n}\n\n// ComplexArithmeticExample - Multiple mutation points\nfunc ComplexArithmeticExample(a, b, c int) int {\n\t// Mutation points:\n\t// + → -, - → +, * → /, / → *\n\treturn (a-b)*c - (a / b)\n}\n\nfunc RunArithmeticExample() {\n\tfmt.Println(\"Arithmetic Mutation Examples\")\n\tfmt.Println(\"============================\")\n\n\tfmt.Printf(\"Add(5, 3) = %d\\n\", AddExample(5, 3))\n\tfmt.Printf(\"Subtract(10, 4) = %d\\n\", SubtractExample(10, 4))\n\tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n\tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n\tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n\t_ = fmt.Printf\n}\n","originalFilePath":"arithmetic_example.go","originalStartLine":58},"diff":"--- Original\n+++ New\n@@ -55,5 +55,5 @@\n \tfmt.Printf(\"Multiply(6, 7) = %d\\n\", MultiplyExample(6, 7))\n \tfmt.Printf(\"Divide(15, 3) = %d\\n\", DivideExample(15, 3))\n \tfmt.Printf(\"Modulus(17, 5) = %d\\n\", ModulusExample(17, 5))\n-\tfmt.Printf(\"Complex(10, 2, 3) = %d\\n\", ComplexArithmeticExample(10, 2, 3))\n+\t_ = fmt.Printf\n }\n","processOutput":"FAIL \"/var/folders/m7/rx69cglx3ggc_yc3cfs3k_jw0000gq/T/go-mutesting-3289315100/arithmetic_example.go.52\" with checksum 1313afc63266b0467a8849dd2a8389b8\n"}],"timeouted":null,"killed":null,"errored":null}